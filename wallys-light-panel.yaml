substitutions:
  proper_name: Wally's Light Panel
  short_name: wally-light-panel
  touch_irq_pin: D3

esphome:
  name: ${short_name}
  friendly_name: ${proper_name}
  includes:
    - tsc2007.h
  libraries:
    - "SPI"
    - "Wire"
    - "Adafruit BusIO"
    - "Adafruit TSC2007"

esp8266:
  board: nodemcuv2

# Enable logging
logger:
  # level: VERBOSE

# Enable Home Assistant API
api:
  encryption:
    key: "HrXh8xyqVJCpDuzx0iQc6cDwXe7BJegwN6ABEc/7X1c="

ota:
  password: "f349159ade3688b40c6def324f96f0dc"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Wally-Light-Panel"
    password: "VkKhgyVPcumZ"

captive_portal:
    
i2c:
  id: i2c_component

light:
- platform: custom
  lambda: |-
    auto my_light = new Tsc2007LightOutput();
    auto irq_pin = new esphome::esp8266::ESP8266GPIOPin();
    irq_pin->set_pin(${touch_irq_pin});
    irq_pin->set_inverted(true);
    my_sensor->set_pin(irq_pin);
    App.register_component(my_light);
    return {my_light};

  lights:
    - name: "Light"

sensor:
- platform: custom
  lambda: |-
    auto my_sensor = new Tsc2007Sensor();
    auto irq_pin = new esphome::esp8266::ESP8266GPIOPin();
    irq_pin->set_pin(${touch_irq_pin});
    irq_pin->set_inverted(true);
    my_sensor->set_pin(irq_pin);
    App.register_component(my_sensor);
    return {my_sensor->get_x_sensor(), my_sensor->get_y_sensor(), my_sensor->get_pressure_sensor()};

  sensors:
    - name: "Touch X"
      state_class: measurement
      accuracy_decimals: 2
      filters:
        - sliding_window_moving_average:
            window_size: 20
            send_every: 5
      #   - delta: 50.0
        - calibrate_linear:
          - 500.0 -> 0.0
          - 3500.0 -> 1.0
        - lambda: 'return x > 1.0 ? 1.0 : (x < 0.0 ? 0.0 : x);'
    - name: "Touch Y"
      state_class: measurement
      accuracy_decimals: 2
      filters:
        - sliding_window_moving_average:
            window_size: 20
            send_every: 5
        - delta: 50.0
        - calibrate_linear:
          - 500.0 -> 0.0
          - 3500.0 -> 1.0
        - lambda: 'return x > 1.0 ? 1.0 : (x < 0.0 ? 0.0 : x);'
    - name: "Touch Pressure"
      state_class: measurement
      accuracy_decimals: 2
      filters:
        - sliding_window_moving_average:
            window_size: 20
            send_every: 5
      #   - delta: 50.0
        - calibrate_linear:
          - 0.0 -> 0.0
          - 1500.0 -> 1.0
        - lambda: 'return x > 1.0 ? 1.0 : (x < 0.0 ? 0.0 : x);'

binary_sensor:
- platform: gpio
  name: "Button"
  pin:
    number: ${touch_irq_pin}
    inverted: true

# - platform: custom
#   lambda: |-
#     auto my_sensor = new Tsc2007BinarySensor();
#     my_sensor->set_pin(new GPIOPin(D0));
#     App.register_component(my_sensor);
#     return {my_sensor};

#   binary_sensors:
#     - name: "Button"

